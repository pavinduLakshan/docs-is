openapi: 3.0.0
info:
  description: |
    This document specifies **Organization level Password Expiring User Identification RESTful API** for **WSO2
    Identity Server**.
  version: "v1"
  title: Password Expiring User Identification Rest API

servers:
  - url: https://{serverUrl}/t/{tenantDomain}/o/api/server/v1
    variables:
      serverUrl:
        default: localhost:9443
      tenantDomain:
        default: carbon.super

paths:
  /password-expired-users:
    get:
      tags:
        - Get password expiring users
      description: |
        Get password expiring users list for a specified period.<br>
        
          <b>Scope(Permission) required:</b> `internal_org_password_expired_user_view`
      operationId: getPasswordExpiredUsers
      parameters:
        - in: query
          name: expiredAfter
          required: true
          schema:
            type: string
          description: The date after which passwords will expire.
          example: 2023-01-31
        - in: query
          name: excludeAfter
          schema:
            type: string
          description: The date after which should be excluded.
          example: 2023-01-01
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/ServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl --location 'https://localhost:9443/o/api/server/v1/password-expired-users?expiredAfter=2024-03-01&excludeAfter=2024-03-30' \
            -H 'Accept: application/json' \
            -H 'Authorization: Bearer {bearer_token}'
components:
  schemas:
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          example: 80001
        message:
          type: string
          example: Some error message
        description:
          type: string
          example: Some error description
    Unauthorized:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          example: 401
        message:
          type: string
          example: Unauthorized
        description:
          type: string
          example: You are unauthorized to make this request
    PasswordExpiredUsersList:
      type: array
      items:
        $ref: '#/components/schemas/PasswordExpiredUser'
    PasswordExpiredUser:
      type: object
      properties:
        userId:
          type: string
        username:
          type: string
        userStoreDomain:
          type: string
      required:
        - username
      example:
        userId: 3c780e73-9ca6-4e49-811e-8e697df22a91
        username: JohnDoe
        userStoreDomain: PRIMARY

  responses:
    Unauthorized:
      description: Unauthorized
      content:
        'application/json':
          schema:
            $ref: '#/components/schemas/Unauthorized'
    Forbidden:
      description: Resource Forbidden
    ServerError:
      description: Internal Server Error
      content:
        'application/json':
          schema:
            $ref: '#/components/schemas/Error'
    BadRequest:
      description: Invalid Input Request
      content:
        'application/json':
          schema:
            $ref: '#/components/schemas/Error'
    Success:
      description: Password expired users returned successfully
      content:
        'application/json':
          schema:
            $ref: '#/components/schemas/PasswordExpiredUsersList'
