openapi: 3.0.1
info:
  title: Claim Management API
  description: |
    This document specifies an **Organization level Claim Management RESTful API** for **WSO2 Identity Server**.
    
    This API allows retrieving local/external claims and claim dialects. Organizations have the default claims/claim dialtect defined in Identity Server and custom claims used by B2B shared apps.
  version: v1
servers:
  - url: https://{serverUrl}/t/{tenantDomain}/o/api/server/v1
    variables:
      serverUrl:
        default: localhost:9443
      tenantDomain:
        default: carbon.super
security:
  - OAuth2: []

tags:
  - name: management
    description: Secured Admin-only calls
paths:
  /claim-dialects/local/claims:
    get:
      tags:
        - management
      summary: Retrieve local claims
      description: |
        Retrieve local claims. <br>
        
        <b>Scope(Permission) required:</b> `internal_org_claim_meta_view`
      operationId: getLocalClaims
      parameters:
        - name: attributes
          in: query
          description: Define only the required attributes to be sent in the response
            object.  <br><b> This option is not yet supported. </b>
          schema:
            type: string
        - name: limit
          in: query
          description: Maximum number of records to return. <br><b> This option is not yet supported. </b>
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          description: Number of records to skip for pagination. <br><b> This option is not yet supported. </b>
          schema:
            type: integer
            format: int32
        - name: filter
          in: query
          description: Condition to filter the retrieval of records. <br><b> This option is not yet supported. </b>
          schema:
            type: string
        - name: sort
          in: query
          description: Define the order by which the retrieved records should be sorted. <br><b> This option is not yet supported. </b>
          schema:
            type: string
      responses:
        200:
          description: Local claims.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LocalClaimRes'
        401:
          description: Unauthorized.
          content: {}
        500:
          description: Internal Server Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        501:
          description: Not Implemented.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X 'GET' \
            'https://localhost:9443/o/api/server/v1/claim-dialects/local/claims' \
            -H 'accept: application/json' \
            -H 'Authorization: Bearer {bearer_token}'
  /claim-dialects/local/claims/{claim-id}:
    get:
      tags:
        - management
      summary: Retrieve local claim by ID
      description: |
        Retrieve a local claim matching the given claim ID. <br>

        <b>Scope(Permission) required:</b> `internal_org_claim_meta_view`
      operationId: getLocalClaim
      parameters:
        - name: claim-id
          in: path
          description: Id of the claim.
          required: true
          schema:
            type: string
      responses:
        200:
          description: Requested claim.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocalClaimRes'
        400:
          description: Invalid input request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Unauthorized.
          content: {}
        403:
          description: Resource Forbidden.
          content: {}
        404:
          description: The specified resource is not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X 'GET' \
            'https://localhost:9443/o/api/server/v1/claim-dialects/local/claims/{claim-id}' \
            -H 'accept: application/json' \
            -H 'Authorization: Bearer {bearer_token}'
  /claim-dialects:
    get:
      tags:
        - management
      summary: Retrieve claim dialects
      description: |
        Retrieve claim dialects. <br>
        
        <b>Scope(Permission) required:</b> `internal_org_claim_meta_view`
      operationId: getClaimDialects
      parameters:
        - name: limit
          in: query
          description: Maximum number of records to return. <br><b> This option is not yet supported. </b>
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          description: Number of records to skip for pagination. <br><b> This option is not yet supported. </b>
          schema:
            type: integer
            format: int32
        - name: filter
          in: query
          description: Condition to filter the retrieval of records. <br><b> This option is not yet supported. </b>
          schema:
            type: string
        - name: sort
          in: query
          description: Define the order by which the retrieved records should be sorted. <br><b> This option is not yet supported. </b>
          schema:
            type: string
      responses:
        200:
          description: Claim dialects.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClaimDialectRes'
        401:
          description: Unauthorized.
          content: {}
        500:
          description: Internal Server Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        501:
          description: Not Implemented.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X 'GET' \
            'https://localhost:9443/o/api/server/v1/claim-dialects' \
            -H 'accept: application/json' \
            -H 'Authorization: Bearer {bearer_token}'
  /claim-dialects/{dialect-id}:
    get:
      tags:
        - management
      summary: Retrieve claim dialect
      description: |
        Retrieve a claim dialect matching the given dialect id. <br>
        
        <b>Scope(Permission) required:</b> `internal_org_claim_meta_view` <br>
      operationId: getClaimDialect
      parameters:
        - name: dialect-id
          in: path
          description: Id of the claim dialect.
          required: true
          schema:
            type: string
      responses:
        200:
          description: Requested claim dialect.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClaimDialectRes'
        400:
          description: Invalid input request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Unauthorized.
          content: {}
        403:
          description: Resource Forbidden.
          content: {}
        404:
          description: The specified resource is not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X 'GET' \
            'https://localhost:9443/o/api/server/v1/claim-dialects/{dialect-id}' \
            -H 'accept: application/json' \
            -H 'Authorization: Bearer {bearer_token}'
  /claim-dialects/{dialect-id}/claims:
    get:
      tags:
        - management
      summary: Retrieve external claims
      description: |
        Retrieve External claims. <br>
        
        <b>Scope(Permission) required:</b> `internal_org_claim_meta_view`
      operationId: getExternalClaims
      parameters:
        - name: dialect-id
          in: path
          description: Id of the claim dialect.
          required: true
          schema:
            type: string
        - name: limit
          in: query
          description: Maximum number of records to return. <br><b> This option is not yet supported. </b>
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          description: Number of records to skip for pagination. <br><b> This option is not yet supported. </b>
          schema:
            type: integer
            format: int32
        - name: filter
          in: query
          description: Condition to filter the retrieval of records. <br><b> This option is not yet supported. </b>
          schema:
            type: string
        - name: sort
          in: query
          description: Define the order by which the retrieved records should be sorted. <br><b> This option is not yet supported. </b>
          schema:
            type: string
      responses:
        200:
          description: External claims.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ExternalClaimRes'
        401:
          description: Unauthorized.
          content: {}
        404:
          description: The specified resource is not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        501:
          description: Not Implemented.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X 'GET' \
            'https://localhost:9443/o/api/server/v1/claim-dialects/{dialect-id}/claims' \
            -H 'accept: application/json' \
            -H 'Authorization: Bearer {bearer_token}'
  /claim-dialects/{dialect-id}/claims/{claim-id}:
    get:
      tags:
        - management
      summary: Retrieve external claim
      description: |
        Retrieve an external claim matching the given dialect ID and claim ID. <br>
        
        <b>Scope(Permission) required:</b> `internal_org_claim_meta_view`
      operationId: getExternalClaim
      parameters:
        - name: dialect-id
          in: path
          description: ID of the claim dialect.
          required: true
          schema:
            type: string
        - name: claim-id
          in: path
          description: ID of the claim.
          required: true
          schema:
            type: string
      responses:
        200:
          description: Requested claim.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalClaimRes'
        400:
          description: Invalid input request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Unauthorized.
          content: {}
        403:
          description: Resource Forbidden.
          content: {}
        404:
          description: The specified resource is not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X 'GET' \
            'https://localhost:9443/o/api/server/v1/claim-dialects/{dialect-id}/claims/{claim-id}' \
            -H 'accept: application/json' \
            -H 'Authorization: Bearer {bearer_token}'
components:
  schemas:
    LocalClaimRes:
      type: object
      properties:
        id:
          type: string
          description: claim ID.
          example: 394b8adcce24c64a8a09a8d80abf8c337bd253de
        claimURI:
          type: string
          description: A unique URI specific to the claim.
          example: http://wso2.org/claims/username
        dialectURI:
          type: string
          description: URI of the claim dialect.
          example: http://wso2.org/claims
        description:
          type: string
          description: Description of the claim.
          example: Some description about the claim.
        displayOrder:
          type: integer
          description: The order in which the claim is displayed among other claims
            under the same dialect.
          example: 10
        displayName:
          type: string
          description: Name of the claim to be displayed in the UI.
          example: Username
        readOnly:
          type: boolean
          description: Specifies if the claim is read-only.
          example: true
        regEx:
          type: string
          description: Regular expression used to validate inputs.
          example: ^([a-zA-Z)$
        required:
          type: boolean
          description: Specifies if the claim is required for user registration.
          example: true
        supportedByDefault:
          type: boolean
          description: Specifies if the claim will be prompted during user registration
            and displayed on the user profile.
          example: true
        attributeMapping:
          type: array
          description: Userstore attribute mappings.
          items:
            $ref: '#/components/schemas/AttributeMapping'
        properties:
          type: array
          description: Define any additional properties if required.
          items:
            $ref: '#/components/schemas/Property'
      description: Local claim response.
    AttributeMapping:
      required:
        - mappedAttribute
        - userstore
      type: object
      properties:
        mappedAttribute:
          type: string
          description: Userstore attribute to be mapped to.
          example: username
        userstore:
          type: string
          description: Userstore domain name.
          example: SECONDARY
      description: Claim user store attribute mapping.
    ClaimDialectRes:
      type: object
      properties:
        id:
          type: string
          description: Dialect id.
          example: 394b8adcce24c64a8a09a0d80abf8c337bd253de
        dialectURI:
          type: string
          description: URI of the claim dialect.
          example: urn:ietf:params:scim:schemas:core:2.0:User
        link:
          $ref: '#/components/schemas/Link'
      description: Claim dialect response.
    ExternalClaimRes:
      type: object
      properties:
        id:
          type: string
          description: External claim ID.
          example: 394b8adcce24c64a8a09a0d80abf8c337dd255de
        claimURI:
          type: string
          description: Claim URI of the external claim.
          example: '  urn:ietf:params:scim:schemas:core:2.0:User:userName'
        claimDialectURI:
          type: string
          description: Dialect URI of the external claim.
          example: urn:ietf:params:scim:schemas:core:2.0:User
        mappedLocalClaimURI:
          type: string
          description: The local claim URI to map with the external claim.
          example: http://wso2.org/claims/username
      description: External claim response.
    Property:
      required:
        - key
        - value
      type: object
      properties:
        key:
          type: string
        value:
          type: string
    Link:
      type: object
      properties:
        href:
          type: string
          description: Relative path to the target resource.
          example: 394b8adcce24c64a8a09a8d80abf8c337bd253de/claims
        rel:
          type: string
          description: Describes how the current context is related to the target
            resource.
          example: claims
    Error:
      required:
        - code
        - message
      type: object
      properties:
        code:
          type: string
          example: AAA-00000
        message:
          type: string
          example: Some Error Message
        description:
          type: string
          example: Some Error Description
        traceId:
          type: string
          example: e0fbcfeb-3617-43c4-8dd0-7b7d38e13047
  responses:
    Conflict:
      description: Element Already Exists.
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/Error'
    Created:
      description: Item Created.
      headers:
        Location:
          description: URI of the created resource.
          schema:
            type: string
      content: {}
    Forbidden:
      description: Resource Forbidden.
      content: {}
    InvalidInput:
      description: Invalid input request.
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/Error'
    NoContent:
      description: No Content.
      content: {}
    NotFound:
      description: The specified resource is not found.
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/Error'
    NotImplemented:
      description: Not Implemented.
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/Error'
    OK:
      description: OK.
      content: {}
    ServerError:
      description: Internal Server Error.
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/Error'
    Unauthorized:
      description: Unauthorized.
      content: {}
  parameters:
    limitQueryParam:
      name: limit
      in: query
      description: Maximum number of records to return.
      schema:
        type: integer
        format: int32
    offsetQueryParam:
      name: offset
      in: query
      description: Number of records to skip for pagination.
      schema:
        type: integer
        format: int32
    filterQueryParam:
      name: filter
      in: query
      description: Condition to filter the retrieval of records.
      schema:
        type: string
    sortQueryParam:
      name: sort
      in: query
      description: Define the order by which the retrieved records should be sorted.
      schema:
        type: string
    attributesQueryParam:
      name: attributes
      in: query
      description: Define only the required attributes to be sent in the response
        object.
      schema:
        type: string
    dialectIdPathParam:
      name: dialect-id
      in: path
      description: Id of the claim dialect.
      required: true
      schema:
        type: string
    claimIdPathParam:
      name: claim-id
      in: path
      description: Id of the claim.
      required: true
      schema:
        type: string
  securitySchemes:
    OAuth2:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://localhost:9443/oauth/authorize
          tokenUrl: https://localhost:9443/oauth/token
          scopes:
            read: Grants read access
            write: Grants write access
            admin: Grants read and write access to administrative information
