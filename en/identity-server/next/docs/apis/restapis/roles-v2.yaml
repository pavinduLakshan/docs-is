openapi: 3.1.0
info:
  version: "v2"
  title: SCIM 2.0 Roles API
  description: |
    SCIM 2.0 Roles v2 API
servers:
  - url: https://{serverUrl}/t/{tenantDomain}/scim2
    variables:
      serverUrl:
        default: localhost:9443
      tenantDomain:
        default: carbon.super
security:
  - OAuth2: []
  - BasicAuth: []
paths:
  /v2/Roles:
    get:
      tags:
        - Roles Endpoint
      summary: Filter Roles
      description: >
        This API returns roles according to the specified filter, sort and
        pagination parameters.


        <b>Scope(Permission) required:</b> `internal_role_mgt_view`
      operationId: getRoleV2
      parameters:
        - name: filter
          in: query
          description: Filter expression for filtering
          required: false
          schema:
            type: string
        - name: startIndex
          in: query
          description: The 1-based index of the first query result
          required: false
          schema:
            type: integer
            format: int32
        - name: count
          in: query
          description: Specifies the desired maximum number of query results per page.
          required: false
          schema:
            type: integer
            format: int32
        - name: sortBy
          in: query
          description: |-
            Specifies the attribute whose value
            SHALL be used to order the returned responses
          required: false
          schema:
            type: string
        - name: sortOder
          in: query
          description: The order in which the "sortBy" parameter is applied.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Valid roles are found
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/RolesListResponseObjectV2'
        '401':
          description: Unauthorized
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorUnauthorized'
        '403':
          description: Forbidden
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorForbidden'
        '404':
          description: No Role found
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorNoRoleAvailable'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X 'GET' \
            'https://localhost:9443/scim2/v2/Roles' \
            -H 'accept: application/scim+json' \
            -H 'Authorization: Basic YWRtaW46YWRtaW4='
    post:
      tags:
        - Roles Endpoint
      summary: Create Role
      description: >
        This API creates a role and returns the details of the created role
        including its unique ID.


        <b>Scope(Permission) required:</b> `internal_role_mgt_create`
      operationId: createRoleV2
      requestBody:
        content:
          application/scim+json:
            schema:
              $ref: '#/components/schemas/RoleCreationObjectV2'
      responses:
        '201':
          description: Valid role is created
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/RolePostResponseObjectV2'
        '401':
          description: Unauthorized
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorUnauthorized'
        '403':
          description: Forbidden
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorForbidden'
        '404':
          description: Role is not found
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorRoleNotAvailable'
        '409':
          description: Role already exist
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorRoleAlreadyAvailable'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X 'POST' \
            'https://localhost:9443/scim2/v2/Roles' \
            -H 'accept: application/scim+json' \
            -H 'Content-Type: application/scim+json' \
            -H 'Authorization: Basic YWRtaW46YWRtaW4=' \
            -d '{
              "schemas": [
                "urn:ietf:params:scim:schemas:extension:2.0:Role"
              ],
              "displayName": "loginRole",
              "audience": {
                "value": "3645709f-ea8d-5595-7690-e1fa0efe3df9",
                "type": "application"
              },
              "users": [
                {
                  "value": "008bba85-451d-414b-87de-c03b5a1f4217"
                }
              ],
              "groups": [
                {
                  "value": "7bac6a86-1f21-4937-9fb1-5be4a93ef469"
                }
              ],
              "permissions": [
                {
                  "value": "internal_login",
                  "display": "Internal Login"
                }
              ]
            }'
      x-codegen-request-body-name: body
  /v2/Roles/.search:
    post:
      tags:
        - Roles Endpoint
      summary: Search Roles
      description: >
        This API returns roles according to the specified filter, sort and
        pagination parameters.


        <b>Scope(Permission) required:</b> `internal_role_mgt_view`
      operationId: getRolesByPostV2
      requestBody:
        content:
          application/scim+json:
            schema:
              $ref: '#/components/schemas/RoleSearchRequestObjectV2'
      responses:
        '200':
          description: Valid roles are found
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/RoleSearchResponseObjectV2'
        '401':
          description: Unauthorized
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorUnauthorized'
        '403':
          description: Forbidden
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorForbidden'
        '404':
          description: Valid roles are not found
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/RoleSearchErrorResponseObject'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X 'POST' \
            'https://localhost:9443/scim2/v2/Roles/.search' \
            -H 'accept: application/scim+json' \
            -H 'Content-Type: application/scim+json' \
            -H 'Authorization: Basic YWRtaW46YWRtaW4=' \
            -d '{
            "schemas": [
              "urn:ietf:params:scim:api:messages:2.0:SearchRequest"
            ],
            "startIndex": 1,
            "filter": "displayName eq loginRole"
            }'
      x-codegen-request-body-name: body
  /v2/Roles/{id}:
    get:
      tags:
        - Roles Endpoint
      summary: Get Role by ID
      description: >
        This API returns the role details of a particular role using its unique
        ID.


        <b>Scope(Permission) required:</b> `internal_role_mgt_view`
      operationId: getRolebyIdV2
      parameters:
        - name: id
          in: path
          description: Unique ID of the resource type.
          required: true
          schema:
            type: string
        - name: attributes
          in: query
          description: SCIM defined attributes parameter.
          required: false
          schema:
            type: string
        - name: excludedAttributes
          in: query
          description: SCIM defined excludedAttribute parameter.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Valid role is found
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/RoleGetResponseObjectV2'
        '401':
          description: Unauthorized
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorUnauthorized'
        '403':
          description: Forbidden
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorForbidden'
        '404':
          description: Valid role is not found
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorNoRoleAvailable'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X 'GET' \
            'https://localhost:9443/scim2/v2/Roles/{role-id}' \
            -H 'accept: application/scim+json' \
            -H 'Authorization: Basic YWRtaW46YWRtaW4='
    put:
      tags:
        - Roles Endpoint
      summary: Update Role - PUT
      description: >
        This API updates the role details and returns the updated role details
        using a PUT operation.


        <b>Scope(Permission) required:</b> `internal_role_mgt_update`
      operationId: updateRoleV2
      parameters:
        - name: id
          in: path
          description: Unique ID of the resource type.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/scim+json:
            schema:
              $ref: '#/components/schemas/RolePutRequestObjectV2'
      responses:
        '200':
          description: Role is updated
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/RolePutResponseObjectV2'
        '400':
          description: Invalid Input
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorInvalidInput'
        '401':
          description: Unauthorized
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorUnauthorized'
        '403':
          description: Forbidden
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorForbidden'
        '404':
          description: Valid role is not found
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorNoRoleAvailable'
        '406':
          description: Not Acceptable
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorNotAcceptable'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X 'PUT' \
            'https://localhost:9443/scim2/v2/Roles/{role-id}' \
            -H 'accept: application/scim+json' \
            -H 'Content-Type: application/scim+json' \
            -H 'Authorization: Basic YWRtaW46YWRtaW4=' \
            -d '{
              "displayName": "loginRole",
              "users": [
                {
                  "value": "409ca90b-2ba6-4474-9a45-2cf7376e6e43"
                }
              ],
              "groups": [
                {
                  "value": "7bac6a86-1f21-4937-9fb1-5be4a93ef469"
                }
              ],
              "permissions": [
                {
                  "value": "internal_login",
                  "display": "Internal Login"
                }
              ]
            }'
      x-codegen-request-body-name: body
    delete:
      tags:
        - Roles Endpoint
      summary: Delete Role
      description: |
        This API deletes a particular role using its unique ID.

        <b>Scope(Permission) required:</b> `internal_role_mgt_delete`
      operationId: deleteRoleV2
      parameters:
        - name: id
          in: path
          description: Unique ID of the resource type.
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Role is deleted
        '401':
          description: Unauthorized
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorUnauthorized'
        '403':
          description: Forbidden
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorForbidden'
        '404':
          description: Valid role is not found
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorNoRoleAvailable'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X 'DELETE' \
            'https://localhost:9443/scim2/v2/Roles/{role-id}' \
            -H 'accept: application/scim+json' \
            -H 'Authorization: Basic YWRtaW46YWRtaW4='
    patch:
      tags:
        - Roles Endpoint
      summary: Update Role - PATCH
      description: >
        This API updates the role details and returns the updated role details
        using a PATCH operation.


        <b>Scope(Permission) required:</b> `internal_role_mgt_update`
      operationId: patchRole
      parameters:
        - name: id
          in: path
          description: Unique id of the resource type.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/scim+json:
            schema:
              $ref: '#/components/schemas/PatchRoleOperationRequestObjectV2'
      responses:
        '200':
          description: Role is updated
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/PatchRoleOperationResponseObjectV2'
        '401':
          description: Unauthorized
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorUnauthorized'
        '403':
          description: Forbidden
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorForbidden'
        '404':
          description: Valid role is not found
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorNoRoleAvailable'
        '406':
          description: Not Acceptable
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorNotAcceptable'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X 'PATCH' \
            'https://localhost:9443/scim2/v2/Roles/{role-id}' \
            -H 'accept: application/scim+json' \
            -H 'Content-Type: application/scim+json' \
            -H 'Authorization: Basic YWRtaW46YWRtaW4=' \
            -d '{
              "schemas": [
                "urn:ietf:params:scim:api:messages:2.0:PatchOp"
              ],
              "Operations": [
                  {
                    "op": "add",
                    "path": "groups",
                    "value": [
                      {
                        "value": "7bac6a86-1f21-4937-9fb1-5be4a93ef469"
                      }
                    ]
                  },
                  {
                    "op": "add",
                    "path": "users",
                    "value": [
                      {
                        "value": "9cac6a86-1f21-4937-9fb1-5be4a93ef349"
                      }
                    ]
                  },
                  {
                    "op": "remove",
                    "path": "users[value eq 0565f472-28fe-4d93-83ad-096c66ed4a47]"
                  },
                  {
                    "op": "remove",
                    "path": "groups[value eq 9065f445-265e-4rfg3-83ad-666c66ed4a55]"
                  },
                  {
                    "op": "replace",
                    "value": {
                      "permissions": [
                        {
                          "value": "internal_role_mgt_view"
                        }
                    ]
                  }
                }
              ]
            }'
      x-codegen-request-body-name: body
components:
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic
    OAuth2:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://localhost:9443/oauth2/authorize
          tokenUrl: https://localhost:9443/oauth2/token
          scopes:
            view: internal_role_mgt_view
            create: internal_role_mgt_create
            update: internal_role_mgt_update
            delete: internal_role_mgt_delete
  schemas:
    RolesListResponseObjectV2:
      type: object
      properties:
        totalResults:
          type: integer
          examples:
            - 3
        startIndex:
          type: integer
          examples:
            - 1
        itemsPerPage:
          type: integer
          examples:
            - 3
        schemas:
          type: array
          items:
            type: string
            examples:
              - urn:ietf:params:scim:api:messages:2.0:ListResponse
        Resources:
          type: array
          items:
            $ref: '#/components/schemas/RoleObV2'
    RoleSearchRequestObjectV2:
      type: object
      properties:
        schemas:
          type: object
          examples:
            -
              - urn:ietf:params:scim:api:messages:2.0:SearchRequest
        startIndex:
          type: integer
          examples:
            - 1
        count:
          type: integer
          examples:
            - 10
        filter:
          type: string
          examples:
            - displayName eq loginRole
    RoleSearchResponseObjectV2:
      type: object
      properties:
        totalResults:
          type: integer
          examples:
            - 1
        startIndex:
          type: integer
          examples:
            - 1
        itemsPerPage:
          type: integer
          examples:
            - 3
        schemas:
          type: array
          items:
            type: string
            examples:
              - urn:ietf:params:scim:api:messages:2.0:ListResponse
        Resources:
          type: array
          items:
            $ref: '#/components/schemas/RoleObV2'
    RoleObV2:
      type: object
      properties:
        displayName:
          type: string
          examples:
            - loginRole
        meta:
          type: object
          properties:
            location:
              type: string
              examples:
                - https://localhost:9443/scim2/v2/Roles/4645709c-ea8c-4495-8590-e1fa0efe3de0
        id:
          type: string
          examples:
            - 4645709c-ea8c-4495-8590-e1fa0efe3de0
        audience:
          type: object
          properties:
            value:
              type: string
              examples:
                - 3645709f-ea8d-5595-7690-e1fa0efe3df9
            display:
              type: string
              examples:
                - My App
            type:
              type: string
              examples:
                - application
        properties:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
                examples:
                  - isSharedRole
              value:
                type: string
                examples:
                  - 'false'
    RoleCreationObjectV2:
      type: object
      required:
        - displayName
        - schemas
      properties:
        schemas:
          type: array
          items:
            type: string
            examples:
              - urn:ietf:params:scim:schemas:extension:2.0:Role
        displayName:
          type: string
          examples:
            - loginRole
        audience:
          type: object
          properties:
            value:
              type: string
              examples:
                - 3645709f-ea8d-5595-7690-e1fa0efe3df9
            type:
              type: string
              enum:
                - application
                - organization
              examples:
                - application
        users:
          type: array
          items:
            type: object
            examples:
              -
                value: 008bba85-451d-414b-87de-c03b5a1f4217
        groups:
          type: array
          items:
            type: object
            examples:
              -
                value: 7bac6a86-1f21-4937-9fb1-5be4a93ef469
        permissions:
          type: array
          items:
            type: object
            properties:
              value:
                type: string
                examples:
                  - internal_login
              display:
                type: string
                examples:
                  - Internal Login
    RoleGetResponseObjectV2:
      type: object
      properties:
        displayName:
          type: string
          examples:
            - loginRole
        meta:
          type: object
          properties:
            location:
              type: string
              examples:
                - https://localhost:9443/scim2/v2/Roles/4645709c-ea8c-4495-8590-e1fa0efe3de0
            resourceType:
              type: string
              examples:
                - Role
        schemas:
          type: array
          items:
            type: string
            examples:
              - urn:ietf:params:scim:schemas:extension:2.0:Role
        id:
          type: string
          examples:
            - 4645709c-ea8c-4495-8590-e1fa0efe3de0
        audience:
          type: object
          properties:
            value:
              type: string
              examples:
                - 3645709f-ea8d-5595-7690-e1fa0efe3df9
            display:
              type: string
              examples:
                - My App
            type:
              type: string
              enum:
                - application
                - organization
              examples:
                - application
        users:
          type: array
          items:
            type: object
            properties:
              $ref:
                type: string
                examples:
                  - https://localhost:9443/scim2/Users/3a12bae9-4386-44be-befd-caf349297f45
              display:
                type: string
                examples:
                  - kim
              value:
                type: string
                examples:
                  - 008bba85-451d-414b-87de-c03b5a1f4217
        groups:
          type: array
          items:
            type: object
            properties:
              $ref:
                type: string
                examples:
                  - https://localhost:9443/scim2/Groups/7bac6a86-1f21-4937-9fb1-5be4a93ef469
              display:
                type: string
                examples:
                  - PRIMARY/manager
              value:
                type: string
                examples:
                  - 7bac6a86-1f21-4937-9fb1-5be4a93ef469
        permissions:
          type: array
          items:
            type: object
            properties:
              value:
                type: string
                examples:
                  - internal_login
              display:
                type: string
                examples:
                  - Internal Login
        associatedApplications:
          type: array
          items:
            type: object
            properties:
              value:
                type: string
              display:
                type: string
          examples:
            -
              - value: 3645709f-ea8d-5595-7690-e1fa0efe3df9
                display: My App
        properties:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
                examples:
                  - isSharedRole
              value:
                type: string
                examples:
                  - 'false'
    RolePostResponseObjectV2:
      type: object
      properties:
        displayName:
          type: string
          examples:
            - loginRole
        meta:
          type: object
          properties:
            location:
              type: string
              examples:
                - https://localhost:9443/scim2/v2/Roles/4645709c-ea8c-4495-8590-e1fa0efe3de0
            resourceType:
              type: string
              examples:
                - Role
        schemas:
          type: array
          items:
            type: string
            examples:
              - urn:ietf:params:scim:schemas:extension:2.0:Role
        id:
          type: string
          examples:
            - 4645709c-ea8c-4495-8590-e1fa0efe3de0
        audience:
          type: object
          properties:
            value:
              type: string
              examples:
                - 3645709f-ea8d-5595-7690-e1fa0efe3df9
            display:
              type: string
              examples:
                - My App
            type:
              type: string
              enum:
                - application
                - organization
              examples:
                - application
    RolePutRequestObjectV2:
      type: object
      properties:
        displayName:
          type: string
          examples:
            - loginRole
        users:
          type: array
          items:
            type: object
            examples:
              - value: 409ca90b-2ba6-4474-9a45-2cf7376e6e43
        groups:
          type: array
          items:
            type: object
            examples:
              - value: 7bac6a86-1f21-4937-9fb1-5be4a93ef469
        permissions:
          type: array
          items:
            type: object
            properties:
              value:
                type: string
                examples:
                  - internal_login
              display:
                type: string
                examples:
                  - Internal Login
    RolePutResponseObjectV2:
      type: object
      properties:
        displayName:
          type: string
          examples:
            - loginRole
        meta:
          type: object
          properties:
            location:
              type: string
              examples:
                - https://localhost:9443/scim2/v2/Roles/4645709c-ea8c-4495-8590-e1fa0efe3de0
            resourceType:
              type: string
              examples:
                - Role
        schemas:
          type: array
          items:
            type: string
            examples:
              - urn:ietf:params:scim:schemas:extension:2.0:Role
        id:
          type: string
          examples:
            - 4645709c-ea8c-4495-8590-e1fa0efe3de0
        audience:
          type: object
          properties:
            value:
              type: string
              examples:
                - 3645709f-ea8d-5595-7690-e1fa0efe3df9
            display:
              type: string
              examples:
                - My App
            type:
              type: string
              enum:
                - application
                - organization
              examples:
                - application
    PatchRoleOperationRequestObjectV2:
      type: object
      properties:
        schemas:
          type: array
          items:
            type: string
            examples:
              - urn:ietf:params:scim:api:messages:2.0:PatchOp
        Operations:
          type: array
          examples:
            -
              - op: add
                path: groups
                value:
                  - value: 7bac6a86-1f21-4937-9fb1-5be4a93ef469
              - op: add
                path: users
                value:
                  - value: 9cac6a86-1f21-4937-9fb1-5be4a93ef349
              - op: remove
                path: "users[value eq 0565f472-28fe-4d93-83ad-096c66ed4a47]"
              - op: remove
                path: "groups[value eq 9065f445-265e-4rfg3-83ad-666c66ed4a55]"
          items:
            $ref: '#/components/schemas/RolePatchOperationobjV2'
    RolePatchOperationobjV2:
      type: object
      properties:
        op:
          type: string
          enum:
            - add
            - remove
            - replace
        path:
          type: string
        value:
          type: array
          items:
            type: object
            properties:
              value:
                type: string
      examples:
        -
          - op: add
            path: groups
            value:
              - value: 7bac6a86-1f21-4937-9fb1-5be4a93ef469
          - op: add
            path: users
            value:
              - value: 9cac6a86-1f21-4937-9fb1-5be4a93ef349
          - op: remove
            path: users[value eq 0565f472-28fe-4d93-83ad-096c66ed4a47]
    PatchRoleOperationResponseObjectV2:
      type: object
      properties:
        displayName:
          type: string
          examples:
            - loginRole
        meta:
          type: object
          properties:
            location:
              type: string
              examples:
                - https://localhost:9443/scim2/v2/Roles/4645709c-ea8c-4495-8590-e1fa0efe3de0
            resourceType:
              type: string
              examples:
                - Role
        schemas:
          type: object
          examples:
            -
              - urn:ietf:params:scim:schemas:extension:2.0:Role
        id:
          type: string
          examples:
            - 4645709c-ea8c-4495-8590-e1fa0efe3de0
        audience:
          type: object
          properties:
            value:
              type: string
              examples:
                - 3645709f-ea8d-5595-7690-e1fa0efe3df9
            display:
              type: string
              examples:
                - My App
            type:
              type: string
              enum:
                - application
                - organization
              examples:
                - application
    ErrorInvalidInput:
      type: object
      required:
        - status
        - schema
        - detail
      properties:
        status:
          type: string
          examples:
            - '400'
        schemas:
          type: string
          examples:
            - urn:ietf:params:scim:api:messages:2.0:Error
        scimType:
          type: string
          examples:
            - invalidSyntax
        detail:
          type: string
          examples:
            - Request is unparsable, syntactically incorrect, or violates schema.
    ErrorUnauthorized:
      type: object
      required:
        - status
        - schema
      properties:
        status:
          type: string
          examples:
            - '401'
        schemas:
          type: string
          examples:
            - urn:ietf:params:scim:api:messages:2.0:Error
        scimType:
          type: string
          examples:
            - Unauthorized
    ErrorNotAcceptable:
      type: object
      required:
        - status
        - schema
      properties:
        status:
          type: string
          examples:
            - '406'
        schemas:
          type: string
          examples:
            - urn:ietf:params:scim:api:messages:2.0:Error
        scimType:
          type: string
          examples:
            - Not Acceptable
    ErrorForbidden:
      type: object
      required:
        - status
        - schema
      properties:
        status:
          type: string
          examples:
            - '403'
        schemas:
          type: string
          examples:
            - urn:ietf:params:scim:api:messages:2.0:Error
        scimType:
          type: string
          examples:
            - Forbidden
    ErrorNoRoleAvailable:
      type: object
      required:
        - status
        - schema
        - detail
      properties:
        status:
          type: string
          examples:
            - '404'
        schemas:
          type: array
          items:
            type: string
            examples:
              - urn:ietf:params:scim:api:messages:2.0:Error
        detail:
          type: string
          examples:
            - Role not found in the system.
    ErrorRoleNotAvailable:
      type: object
      required:
        - status
        - schema
        - detail
      properties:
        status:
          type: string
          examples:
            - '404'
        schemas:
          type: string
          examples:
            - urn:ietf:params:scim:api:messages:2.0:Error
        detail:
          type: string
          examples:
            - No Role with the id : 4645709c-ea8c-4495-8590-e1fa0efe3de0 in the system.
    ErrorRoleAlreadyAvailable:
      type: object
      required:
        - status
        - schema
        - detail
      properties:
        status:
          type: string
          examples:
            - '409'
        schemas:
          type: string
          examples:
            - urn:ietf:params:scim:api:messages:2.0:Error
        detail:
          type: string
          examples:
            - 'Role with name: Internal/loginRole already exists in the system.'
    RoleSearchErrorResponseObject:
      type: object
      required:
        - totalResults
        - startIndex
        - itemsPerPage
        - schemas
      properties:
        totalResults:
          type: integer
          examples:
            - 0
        startIndex:
          type: integer
          examples:
            - 1
        itemsPerPage:
          type: integer
          examples:
            - 5
        schemas:
          type: array
          items:
            examples:
              - urn:ietf:params:scim:api:messages:2.0:ListResponse
