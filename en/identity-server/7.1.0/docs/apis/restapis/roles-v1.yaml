openapi: 3.1.0
info:
  title: SCIM 2.0 Roles API
  description: |
    SCIM 2.0 Roles v1 API
  version: "v1"
servers:
  - url: https://{serverUrl}/t/{tenantDomain}/scim2
    variables:
      serverUrl:
        default: localhost:9443
      tenantDomain:
        default: carbon.super
security:
  - OAuth2: []
  - BasicAuth: []
paths:
  /Roles:
    get:
      tags:
        - Roles Endpoint
      summary: Filter roles
      description: "This API returns roles according to the specified filter, sort,\
        and pagination parameters.
        
        
        <b>Scope(Permission) required:</b> `internal_role_mgt_view`"
      operationId: getRole
      parameters:
        - name: filter
          in: query
          description: Filter expression for filtering
          schema:
            type: string
        - name: startIndex
          in: query
          description: The 1-based index of the first query result
          schema:
            type: integer
            format: int32
        - name: count
          in: query
          description: Specifies the desired maximum number of query results per page.
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: Valid roles are found
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/RolesListResponseObject'
        401:
          description: Unauthorized
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorUnauthorized'
        403:
          description: Forbidden
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorForbidden'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X 'GET' \
            'https://localhost:9443/scim2/Roles' \
            -H 'accept: application/scim+json' \
            -H 'Authorization: Basic YWRtaW46YWRtaW4='
    post:
      tags:
        - Roles Endpoint
      summary: Create role
      description: "This API creates a role and returns the details of the created\
        \ role including its unique ID.
        
        
        <b>Scope(Permission) required:</b> `internal_role_mgt_create`"
      operationId: createRole
      requestBody:
        content:
          application/scim+json:
            schema:
              $ref: '#/components/schemas/RoleRequestObject'
        required: false
      responses:
        201:
          description: Valid role is created
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/RolePostResponseObject'
        401:
          description: Unauthorized
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorUnauthorized'
        403:
          description: Forbidden
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorForbidden'
        409:
          description: Role already exist
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErroRoleAlreadyAvailable'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X 'POST' \
            'https://localhost:9443/scim2/Roles' \
            -H 'accept: application/scim+json' \
            -H 'Content-Type: application/scim+json' \
            -H 'Authorization: Basic YWRtaW46YWRtaW4=' \
            -d '{
            "schemas": [
              "urn:ietf:params:scim:schemas:extension:2.0:Role"
            ],
            "displayName": "loginRole",
            "users": [
              {
                "value": "008bba85-451d-414b-87de-c03b5a1f4217"
              }
            ],
            "groups": [
              {
                "value": "7bac6a86-1f21-4937-9fb1-5be4a93ef469"
              }
            ],
            "permissions": [
              "/permission/admin/login"
            ]
            }'
      x-codegen-request-body-name: body
  /Roles/.search:
    post:
      tags:
        - Roles Endpoint
      summary: Search roles
      description: "This API returns roles according to the specified filter, sort\
        \ and pagination parameters.
        
        
        <b>Scope(Permission) required:</b> `internal_role_mgt_view`"
      operationId: getRolesByPost
      requestBody:
        content:
          application/scim+json:
            schema:
              $ref: '#/components/schemas/RoleSearchRequestObject'
        required: false
      responses:
        200:
          description: Valid roles are found
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/RoleSearchResponseObject'
        401:
          description: Unauthorized
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorUnauthorized'
        403:
          description: Forbidden
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorForbidden'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X 'POST' \
            'https://localhost:9443/scim2/Roles/.search' \
            -H 'accept: application/scim+json' \
            -H 'Content-Type: application/scim+json' \
            -H 'Authorization: Basic YWRtaW46YWRtaW4=' \
            -d '{
            "schemas": [
              "urn:ietf:params:scim:api:messages:2.0:SearchRequest"
            ],
            "startIndex": 1,
            "count": 10,
            "filter": "displayName eq loginRole"
            }'
      x-codegen-request-body-name: body
  /Roles/{id}:
    get:
      tags:
        - Roles Endpoint
      summary: Get role by ID
      description: "This API returns the role details of a particular role using its\
        \ unique ID.
        
        
        <b>Scope(Permission) required:</b> `internal_role_mgt_view`"
      operationId: getRolebyId
      parameters:
        - name: id
          in: path
          description: Unique ID of the resource type.
          required: true
          schema:
            type: string
        - name: attributes
          in: query
          description: SCIM defined attributes parameter.
          schema:
            type: string
        - name: excludedAttributes
          in: query
          description: SCIM defined excludedAttribute parameter.
          schema:
            type: string
      responses:
        200:
          description: Valid role is found
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/RoleGetResponseObject'
        401:
          description: Unauthorized
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorUnauthorized'
        403:
          description: Forbidden
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorForbidden'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X 'GET' \
            'https://localhost:9443/scim2/Roles/{role-id}' \
            -H 'accept: application/scim+json'
    put:
      tags:
        - Roles Endpoint
      summary: Update role - PUT
      description: "This API updates the role details and returns the updated role\
        \ details using a PUT operation.
        
        
        <b>Scope(Permission) required:</b> `internal_role_mgt_update`"
      operationId: updateRole
      parameters:
        - name: id
          in: path
          description: Unique ID of the resource type.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/scim+json:
            schema:
              $ref: '#/components/schemas/RolePutRequestObject'
        required: false
      responses:
        200:
          description: Role is updated
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/RolePutResponseObject'
        400:
          description: Invalid Input
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorInvalidInput'
        401:
          description: Unauthorized
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorUnauthorized'
        403:
          description: Forbidden
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorForbidden'
        406:
          description: Not Acceptable
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorNotAcceptable'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X 'PUT' \
            'https://localhost:9443/scim2/Roles/{role-id}' \
            -H 'accept: application/scim+json' \
            -H 'Content-Type: application/scim+json' \
            -H 'Authorization: Basic YWRtaW46YWRtaW4=' \
            -d '{
            "displayName": "loginRole",
            "users": [
              {
                "value": "409ca90b-2ba6-4474-9a45-2cf7376e6e43"
              }
            ],
            "groups": [
              {
                "value": "7bac6a86-1f21-4937-9fb1-5be4a93ef469"
              }
            ],
            "permissions": [
              "/permission/admin/manage/add"
            ]
            }'
      x-codegen-request-body-name: body
    delete:
      tags:
        - Roles Endpoint
      summary: Delete role
      description: "This API deletes a particular role using its unique ID.
      
      
        <b>Scope(Permission) required:</b> `internal_role_mgt_delete`"
      operationId: deleteRole
      parameters:
        - name: id
          in: path
          description: Unique ID of the resource type.
          required: true
          schema:
            type: string
      responses:
        204:
          description: Role is deleted
          content: {}
        401:
          description: Unauthorized
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorUnauthorized'
        403:
          description: Forbidden
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorForbidden'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X 'DELETE' \
            'https://localhost:9443/scim2/Roles/{role-id}' \
            -H 'accept: */*'
    patch:
      tags:
        - Roles Endpoint
      summary: Update role - PATCH
      description: "This API updates the role details and returns the updated role\
        \ details using a PATCH operation.
        
        
        <b>Scope(Permission) required:</b> `internal_role_mgt_update`"
      operationId: patchRole
      parameters:
        - name: id
          in: path
          description: Unique id of the resource type.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/scim+json:
            schema:
              $ref: '#/components/schemas/PatchRoleOperationRequestObject'
        required: false
      responses:
        200:
          description: Role is updated
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/PatchRoleOperationResponseObject'
        401:
          description: Unauthorized
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorUnauthorized'
        403:
          description: Forbidden
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorForbidden'
        406:
          description: Not Acceptable
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorNotAcceptable'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X 'PATCH' \
            'https://localhost:9443/scim2/Roles/{role-id}' \
            -H 'accept: application/scim+json' \
            -H 'Content-Type: application/scim+json' \
            -H 'Authorization: Basic YWRtaW46YWRtaW4=' \
            -d '{
            "schemas": [
              "urn:ietf:params:scim:api:messages:2.0:PatchOp"
            ],
            "Operations": [
              {
                "op": "add",
                "path": "groups",
                "value": [
                  {
                    "value": "7bac6a86-1f21-4937-9fb1-5be4a93ef469"
                  }
                ]
              }
            ]
            }'
      x-codegen-request-body-name: body
components:
  schemas:
    RolesListResponseObject:
      type: object
      properties:
        totalResults:
          type: integer
          examples:
            - 3
        startIndex:
          type: integer
          examples:
            - 1
        itemsPerPage:
          type: integer
          examples:
            - 3
        schemas:
          type: array
          items:
            type: string
            examples:
              - urn:ietf:params:scim:api:messages:2.0:ListResponse
        Resources:
          type: array
          items:
            $ref: '#/components/schemas/RoleOb'
    RoleSearchRequestObject:
      type: object
      properties:
        schemas:
          type: object
          properties: {}
          examples:
            -
              - urn:ietf:params:scim:api:messages:2.0:SearchRequest
        startIndex:
          type: integer
          examples:
            - 1
        count:
          type: integer
          examples:
            - 10
        filter:
          type: string
          examples:
            - displayName eq loginRole
    RoleSearchResponseObject:
      type: object
      properties:
        totalResults:
          type: integer
          examples:
            - 1
        startIndex:
          type: integer
          examples:
            - 1
        itemsPerPage:
          type: integer
          examples:
            - 3
        schemas:
          type: array
          items:
            type: string
            examples:
              - urn:ietf:params:scim:api:messages:2.0:ListResponse
        Resources:
          type: array
          items:
            $ref: '#/components/schemas/RoleOb'
    RoleOb:
      type: object
      properties:
        displayName:
          type: string
          examples:
            - loginRole
        meta:
          type: object
          properties:
            location:
              type: string
              examples:
                - https://localhost:9443/scim2/Roles/4645709c-ea8c-4495-8590-e1fa0efe3de0
        id:
          type: string
          examples:
            - 4645709c-ea8c-4495-8590-e1fa0efe3de0
    RoleRequestObject:
      required:
        - displayName
        - schemas
      type: object
      properties:
        schemas:
          type: array
          items:
            type: string
            examples:
              - urn:ietf:params:scim:schemas:extension:2.0:Role
        displayName:
          type: string
          examples:
            - loginRole
        users:
          type: array
          items:
            type: object
            properties: {}
            examples:
              -
                value: 008bba85-451d-414b-87de-c03b5a1f4217
        groups:
          type: array
          items:
            type: object
            properties: {}
            examples:
              -
                value: 7bac6a86-1f21-4937-9fb1-5be4a93ef469
        permissions:
          type: array
          items:
            type: string
            examples:
              - /permission/admin/login
    RoleGetResponseObject:
      type: object
      properties:
        displayName:
          type: string
          examples:
            - loginRole
        meta:
          type: object
          properties:
            location:
              type: string
              examples:
                - https://localhost:9443/scim2/Roles/4645709c-ea8c-4495-8590-e1fa0efe3de0
            resourceType:
              type: string
              examples:
                - Role
        schemas:
          type: array
          items:
            type: string
            examples:
              - urn:ietf:params:scim:schemas:extension:2.0:Role
        id:
          type: string
          examples:
            - 4645709c-ea8c-4495-8590-e1fa0efe3de0
        users:
          type: array
          items:
            type: object
            properties:
              $ref:
                type: string
                examples:
                  - https://localhost:9443/scim2/Users/3a12bae9-4386-44be-befd-caf349297f45
              display:
                type: string
                examples:
                  - kim
              value:
                type: string
                examples:
                  - 008bba85-451d-414b-87de-c03b5a1f4217
        groups:
          type: array
          items:
            type: object
            properties:
              $ref:
                type: string
                examples:
                  - https://localhost:9443/scim2/Groups/7bac6a86-1f21-4937-9fb1-5be4a93ef469
              display:
                type: string
                examples:
                  - PRIMARY/manager
              value:
                type: string
                examples:
                  - 7bac6a86-1f21-4937-9fb1-5be4a93ef469
        permissions:
          type: array
          items:
            type: string
            examples:
              - /permission/admin/login
    RolePostResponseObject:
      type: object
      properties:
        displayName:
          type: string
          examples:
            - loginRole
        meta:
          type: object
          properties:
            location:
              type: string
              examples:
                - https://localhost:9443/scim2/Roles/4645709c-ea8c-4495-8590-e1fa0efe3de0
            resourceType:
              type: string
              examples:
                - Role
        schemas:
          type: array
          items:
            type: string
            examples:
              - urn:ietf:params:scim:schemas:extension:2.0:Role
        id:
          type: string
          examples:
            - 4645709c-ea8c-4495-8590-e1fa0efe3de0
    RolePutRequestObject:
      type: object
      properties:
        displayName:
          type: string
          examples:
            - loginRole
        users:
          type: array
          items:
            type: object
            properties: {}
            examples:
              -
                value: 409ca90b-2ba6-4474-9a45-2cf7376e6e43
        groups:
          type: array
          items:
            type: object
            properties: {}
            examples:
              -
                value: 7bac6a86-1f21-4937-9fb1-5be4a93ef469
        permissions:
          type: array
          items:
            type: string
            examples:
              - /permission/admin/manage/add
    RolePutResponseObject:
      type: object
      properties:
        displayName:
          type: string
          examples:
            - loginRole
        meta:
          type: object
          properties:
            location:
              type: string
              examples:
                - https://localhost:9443/scim2/Roles/4645709c-ea8c-4495-8590-e1fa0efe3de0
            resourceType:
              type: string
              examples:
                - Role
        schemas:
          type: array
          items:
            type: string
            examples:
              - urn:ietf:params:scim:schemas:extension:2.0:Role
        id:
          type: string
          examples:
            - 4645709c-ea8c-4495-8590-e1fa0efe3de0
    PatchRoleOperationRequestObject:
      type: object
      properties:
        schemas:
          type: array
          items:
            type: string
            examples:
              - urn:ietf:params:scim:api:messages:2.0:PatchOp
        Operations:
          type: array
          items:
            $ref: '#/components/schemas/RoleItemAddGroupobj'
    RoleItemAddGroupobj:
      type: object
      properties:
        op:
          type: string
          enum:
            - add
            - remove
            - replace
        path:
          type: string
          examples:
            - groups
        value:
          type: array
          items:
            type: object
            properties: {}
            examples:
              -
                value: 7bac6a86-1f21-4937-9fb1-5be4a93ef469
    PatchRoleOperationResponseObject:
      type: object
      properties:
        displayName:
          type: string
          examples:
            - loginRole
        meta:
          type: object
          properties:
            location:
              type: string
              examples:
                - https://localhost:9443/scim2/Roles/4645709c-ea8c-4495-8590-e1fa0efe3de0
            resourceType:
              type: string
              examples:
                - Role
        schemas:
          type: object
          properties: {}
          examples:
            -
              - urn:ietf:params:scim:schemas:extension:2.0:Role
        id:
          type: string
          examples:
            - 4645709c-ea8c-4495-8590-e1fa0efe3de0
    ErrorInvalidInput:
      required:
        - detail
        - status
      type: object
      properties:
        status:
          type: string
          examples:
            - "400"
        schemas:
          type: string
          examples:
            - urn:ietf:params:scim:api:messages:2.0:Error
        scimType:
          type: string
          examples:
            - invalidSyntax
        detail:
          type: string
          examples:
            - Request is unparsable, syntactically incorrect, or violates schema.
    ErrorUnauthorized:
      required:
        - status
      type: object
      properties:
        status:
          type: string
          examples:
            - "401"
        schemas:
          type: string
          examples:
            - urn:ietf:params:scim:api:messages:2.0:Error
        scimType:
          type: string
          examples:
            - Unauthorized
    ErrorNotAcceptable:
      required:
        - status
      type: object
      properties:
        status:
          type: string
          examples:
            - "406"
        schemas:
          type: string
          examples:
            - urn:ietf:params:scim:api:messages:2.0:Error
        scimType:
          type: string
          examples:
            - Not Acceptable
    ErrorForbidden:
      required:
        - status
      type: object
      properties:
        status:
          type: string
          examples:
            - "403"
        schemas:
          type: string
          examples:
            - urn:ietf:params:scim:api:messages:2.0:Error
        scimType:
          type: string
          examples:
            - Forbidden
    ErroRoleAlreadyAvailable:
      required:
        - detail
        - status
      type: object
      properties:
        status:
          type: string
          examples:
            - "409"
        schemas:
          type: string
          examples:
            - urn:ietf:params:scim:api:messages:2.0:Error
        detail:
          type: string
          examples:
            - 'Role with name: Internal/loginRole already exists in the system.'
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic
    OAuth2:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://localhost:9443/oauth2/authorize
          tokenUrl: https://localhost:9443/oauth2/token
          scopes:
            view: internal_role_mgt_view
            create: internal_role_mgt_create
            update: internal_role_mgt_update
            delete: internal_role_mgt_delete
