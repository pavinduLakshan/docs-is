openapi: 3.0.1
info:
  title: Authentication Data API
  description: |
    This document specifies a RESTful API for the WSO2 Identity Server.

    <b>Instructions for the `/data` endpoint</b> <br>
    To configure the Authentication Data API add the following configuration to the `deployment.toml` file found in the `IS_HOME/repository/conf` directory and restart the IS server.
    
    ```toml
    [authentication.endpoint.redirect_params]
    filter_policy = "include"
    remove_on_consume_from_api = "true"
    parameters = ["sessionDataKey"]
    ```

    <table>
        <thead>
            <tr>
                <th>Field Name</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>filter_policy</td>
                <td>The value is either <b>include</b> or <b>exclude</b>. An include indicates an allow list value, whereas an <b>exclude</b> indicates a deny list value.</td>
            </tr>
            <tr>
                <td>remove_on_consume_from_api</td>
                <td>This decides whether to remove the parameters on a read. If set to true, parameters are deleted upon read and wonâ€™t be available for subsequent API requests, unless they are repopulated in the backend.</td>
            </tr>
            <tr>
                <td>parameters</td>
                <td>The list of parameters to be allowed/denied. The name attribute is used to specify the parameter name.</td>
            </tr>
            <tr>
                <td>sessionDataKey</td>
                <td>
                    <p>This is an identifier used by the Identity Server to maintain state information about this particular request from the service provider.</p>
                    <p>
                        <div class="admonition note">
                        <p class="admonition-title">Note</p>
                        <p>The <b>sessionDataKey</b> query parameter is used to coordinate the request state across components participating in the request flow. <br />
                        <br/>
                        The <b>sessionDataKey</b> does not correlate with the user session and at the end of other request flow, the request state maintained against it is cleared by each participating component.
                        <br/>
                        <br/>
                        This means that even if an external party grabs the <b>sessionDataKey</b> they will not be able to get into the authentication sequence.
                        </div>
                    </p>
                </td>
            </tr>
        </tbody>
    </table>
  version: "1.2"
servers:
- url: https://{serverUrl}/api/identity/auth/v1.1
  variables:
    serverUrl:
      default: localhost:9443
paths:
  /authenticate:
    post:
      tags:
      - Authentication
      summary: Authenticate user
      security:
        - BasicAuth: []
      description: This API is used to authenticate the user and to get a JWT that can be used to identify the user authenticated. 
      requestBody:
        description: Username and password in the request body. **Not required if you have authorized to the API using basic auth.**
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthenticationRequest'
        required: false
      responses:
        202:
          description: Authentication accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationSuccessResponse'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X 'POST' \
            'https://localhost:9443/api/identity/auth/v1.1/authenticate' \
            -H 'accept: application/json' \
            -H 'Authorization: Basic YWRtaW46YWRtaW4=' \
            -H 'Content-Type: application/json' \
            -d '{
            "username": "string",
            "password": "string"
            }'
  
  /context/{sessionKey}:
    get:
      tags:
      - Authentication
      summary: |
        Retrieve an authentication context parameter
      description: |
        This API is used to retrieve parameters set by the authentication framework to be accessed by the authentication endpoint. Parameters should be set by calling AuthenticationContext.addEndpointParam() to be eligible to query with this API. This can be used to retrieve sensitive parameters required for the authentication endpoint.
      security:
        - BasicAuth: []
      operationId: getContextParameters
      parameters:
      - name: sessionKey
        in: path
        description: This represents the session data key that will uniquely identify
          the authentication context
        required: true
        schema:
          type: string
      - name: parameters
        in: query
        description: Comma-separated list of parameters to filter. If none provided
          all available parameters will be sent.
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Parameters'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X 'GET' \
            'https://localhost:9443/api/identity/auth/v1.1/context/{sessionKey}' \
            -H 'accept: application/json' \
            -H 'Authorization: Basic YWRtaW46YWRtaW4='
      
  /data/{keyType}/{correlationKey}:
    get:
      tags:
      - Authentication
      summary: |
        Retrieve sensitive parameters used at the authentication flow
      description: |
        <b>Before using this API, see instructions above on how to configure this API in IS.</b><br />
        This API is used to retrieve sensitive parameters that can't be sent as query parameters during the authentication flow.
        This call may not be idempotent if IS is configured to clear the data on retrieval to prevent multiple retrievals. 
        
      operationId: getSensitiveParameters
      security:
        - BasicAuth: []
      parameters:
      - name: keyType
        in: path
        description: |
          The correlation key type. Either **AuthRequestKey** or **OauthConsentKey**. <br/> **AuthRequestKey** can be used to query parameters set by the authentication framework and relate to sessionDataKey. </br> **OauthConsentKey** can be used to query parameters set by the OAuth consent flow and relate to sessionDataKeyConsent.
        required: true
        schema:
          type: string
      - name: correlationKey
        in: path
        description: The correlation key. Either the value of **sessionDataKey** or **sessionDataKeyConsent** corresponding to the keyType above.
        required: true
        schema:
          type: string
      - name: parameters
        in: query
        description: Comma-separated list of parameters to filter. If none provided
          all available parameters will be returned.
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Parameters'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X 'GET' \
            'https://localhost:9443/api/identity/auth/v1.1/data/{keyType}/{correlationKey}' \
            -H 'accept: application/json' \
            -H 'Authorization: Basic YWRtaW46YWRtaW4='
components:
  schemas:
    AuthenticationRequest:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
    AuthenticationSuccessResponse:
      type: object
      properties:
        token:
          type: string
    Parameters:
      type: object
      additionalProperties:
        type: object
        properties: {}
    Error:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
        description:
          type: string
        properties:
          type: object
          additionalProperties:
            type: string
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic